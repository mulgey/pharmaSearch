doctype html
html
    head
      // Import Google Icon Font
      link(href='https://fonts.googleapis.com/icon?family=Material+Icons', rel='stylesheet')
      // Compiled and minified CSS
      link(rel='stylesheet', href='https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css')
      // My very own great CSS
      link(rel='stylesheet', href='css/style.css')
      // Let browser know website is optimized for mobile
      meta(name='viewport', content='width=device-width, initial-scale=1.0')
    body
      header
        .navbar-fixed(style='margin-bottom: 2rem;')  
          nav
            .nav-wrapper(style='background-color: royalblue;')
              a.brand-logo(href='#') PharmaSearch
              ul#nav-mobile.right.hide-on-med-and-down
                li
                  a(href='#' style='margin-right: 2rem;') About
      main
        .container
          .row
            form.col.s12
              .row
                .input-field.col.s12
                  input#email.validate(type='email')
                  label(for='email') E-mail to be Sent
                  span.helper-text(data-error='wrong', data-success='')
                .input-field.col.s12
                  textarea#reportText.materialize-textarea(onchange="this.innerHTML=this.value;")
                  label(for='reportText') Selected Studies
          .row  
            #sendReady.col.s2.waves-effect.waves-light.btn.offset-s4(style='border-radius: 12px; width: 25%; background-color: royalblue;')
                | Ready to Send
                i.material-icons.right done
      footer
        footer.page-footer
          .container
            .row
              .col.l6.s12
                h5.white-text Footer Content
                p.grey-text.text-lighten-4 You can use rows and columns here to organize your footer content.
              .col.l4.offset-l2.s12
                h5.white-text Links
                ul
                  li
                    a.grey-text.text-lighten-3(href='#!') Link 1
          .footer-copyright
            .container
              marquee(id='slider' behavior='scroll', direction='left' scrollamount='12')
    // Compiled and minified JavaScript
    script(src='https://code.jquery.com/jquery-3.4.1.min.js', integrity='sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=', crossorigin='anonymous')
    script(src='js/jquery.paginate.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js')
    // FUNDEMENTALS
    script.
      M.AutoInit();
      // COOKIE ENGINE START
      function createCookie(name,value,days) {
      if (days) {
      var date = new Date();
      date.setTime(date.getTime()+(days*24*60*60*1000));
      var expires = "; expires="+date.toGMTString();
      }
      else var expires = "";
      document.cookie = name+"="+value+expires+"; path=/";
      }
      function readCookie(name) {
      var nameEQ = name + "=";
      var ca = document.cookie.split(';');
      for(var i=0;i < ca.length;i++) {
      var c = ca[i];
      while (c.charAt(0)==' ') c = c.substring(1,c.length);
      if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
      }
      return null;
      }
      function eraseCookie(name) {
      createCookie(name,"",-1);
      }
      // COOKIE ENGINE END

      //CONVERT COOKIES BACK TO ARRAYS
      let json_text = readCookie('text');
      let textArray = JSON.parse(json_text);

      let json_link = readCookie('link');
      let linkArray = JSON.parse(json_link);

      // COMBINE THE ARRAYS AND PRESENT THE RESULT ON THE TEXTAREA
      textArray.forEach((text, value) => {
        const url = linkArray[value];
        // DON'T ADD LINE BREAKS IF THERE'S ONE RESULT
        if (linkArray.length == 1) {
        let report = `${text} (${url})`;
        return $('#reportText').append(report); 
        } else {
        let report = `${text} (${url})\r\n\r\n`;
        return $('#reportText').append(report); 
        }
      });

    script.
      $("#sendReady").click(function () {
        console.log('Clicked!');
        const nodemailer = require("nodemailer");
        let config = require("js/config");

        // async..await is not allowed in global scope, must use a wrapper
        async function main() {
          // create reusable transporter object using the default SMTP transport
          let transporter = nodemailer.createTransport({
            host: "mail.renaldose.com",
            port: 8889,
            secure: false, // true for 465, false for other ports
            auth: {
              user: config.user,
              pass: config.pass
            },
          });

          // verify connection configuration
            transporter.verify(function(error, success) {
                if (error) {
                console.log(error);
                } else {
                console.log("Server is ready to take our messages");
                }
            });

          // send mail with defined transport object
          let info = await transporter.sendMail({
            from: '"PharmaSearch E-Mail Service â˜•" <mustafa@renaldose.com>', // sender address
            to: "mustafa@renaldose.com", // list of receivers
            subject: "Your List of Selected Studies ðŸ“Œ", // Subject line
            html: "<b>Test e-mail</b> starts here. And ends <i>here</i>", // html body
          });

          console.log("Message sent: %s", info.messageId);
          // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com>

          // Preview only available when sending through an Ethereal account
          console.log("Preview URL: %s", nodemailer.getTestMessageUrl(info));
          // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...
        }

        main().catch(console.error);
      });

